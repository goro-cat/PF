
  #postのnewを受け取る
  def initialize(post = Post.new)
    @post = post
    self.attributes = @post.attributes if @post.persisted?
  end

  #def assign_attributes(params = {})
  #  @params = params
  #  images_attributes = params[:images_attributes]


  def initialize(user, post, params = {})
    @user = user
    @post = post
    super(params)
  end

  def save

    return false if invalid?

    ActiveRecord::Base.transaction do
      post = Post.new(post_params)
      post.save!

      #画像は複数あるからeachでsaveをまわす
      images.each do |image|
        post.post_images.create!(image: image)
      end

     end
    true
  end

  private

  def post_params
    {
      user_id: user_id,
      text: text,
      pet_sex: pet_sex,
      plase: plase,
      pet_name: pet_name
    }
  end
  
  
 <<<<<< posts_controller >>>>>>>>>
  def new
    #@genre = Genre.new
    #@genre.posts.build
    #@post = @genre.posts.new

    @post = PostsForm.new
  end

  def create
   # @genre = Genre.new(genre_params)
    #if @genre.save
    #  redirect_to post_path(@genre.user_id)
    #else
    #  render "new"
    #end
    ##################################
    #@post = Post.new(post_params)
    #@post.user_id = current_user.id
    #@post.save
    #redirect_to post_path(@post.id)
    ###################################
     # genre = Genre.new(genre_params)
     #genre.save

     #  post = Post.new(post_params)
    #  post.save
    #  redirect_to post_path(post.id)
    @form = Post.new
    #@form = Posts::Form.new(currenr_user, @form, post_params)
    @form.assign_attributes(post_form_params)

    if @form.save
      redirect_to posts_path
    else
      render :new
    end
  end

  def index
    #@posts = Genre.all.includes(:posts)
    @posts = Post.all
    @posts = @posts.page(params[:page]).reverse_order
  end

  def show
    #genre = Genre.find(params[:id])
    #@post = Post.find(genre_params.posts_attributes[:id])
    @post = Post.find(params[:id])
    @comment = Comment.new
  end

  def edit
    @post = PostForm.new(post = Post.find(params[:id]))
  end

  def destroy
  end

  private
  #def genre_params
  #  params.require(:genre).permit(:category, :animal, posts_attributes: [:pet_sex, :text, :plase, :post_image, :pet_name])
  #end

  #.merge(user_id: current_user.id, )
  def post_params
     #params.require(:post).permit(:genre_id, :pet_sex, :text, :plase, :post_image, :pet_name).merge(user_id: current_user.id, genre_id: genre.id)
     params.require(:posts_form).permit(:pet_sex, :text, :plase, :pet_name, { images: [] }).merge(user_id: current_user.id, category: category.id, animal: animal.id)
  end